CREATE OR REPLACE FUNCTION program_type (owner_in     IN VARCHAR2,
                                         package_in   IN VARCHAR2,
                                         program_in   IN VARCHAR2)
   RETURN VARCHAR2
IS
   c_function_pos   CONSTANT PLS_INTEGER := 0;

   TYPE type_aat IS TABLE OF all_objects.object_type%TYPE
      INDEX BY PLS_INTEGER;

   l_types               type_aat;
   retval                    VARCHAR2 (32767);

   FUNCTION list_to_string (list_in       IN type_aat,
                            delim_in      IN VARCHAR2 DEFAULT ',',
                            distinct_in   IN BOOLEAN DEFAULT FALSE)
      RETURN VARCHAR2
   IS
      l_row         PLS_INTEGER;
      l_add_value   BOOLEAN;
      retval        VARCHAR2 (32767);

      PROCEDURE add_item
      IS
      BEGIN
         retval := retval || delim_in || list_in (l_row);
      END add_item;
   BEGIN
      l_row := list_in.FIRST;

      WHILE (l_row IS NOT NULL)
      LOOP
         -- Decide if this value should be added.
         -- Only an issue if the user has specified DISTINCT.
         IF NOT distinct_in OR retval IS NULL
         THEN
            add_item;
         ELSIF     distinct_in
               AND INSTR (retval, delim_in || list_in (l_row)) = 0
         THEN
            add_item;
         END IF;

         l_row := list_in.NEXT (l_row);
      END LOOP;

      RETURN LTRIM (retval, delim_in);
   END list_to_string;
BEGIN
   IF package_in IS NULL
   THEN
      -- Simply use ALL_OBJECTS to find the stand-alone program,
      -- and along with it, its type.
      SELECT object_type
        INTO retval
        FROM all_objects
       WHERE     owner = owner_in
             AND object_name = program_in
             AND object_type IN ('FUNCTION', 'PROCEDURE');
   ELSE
        SELECT CASE MIN (position)
                  WHEN c_function_pos THEN 'FUNCTION'
                  ELSE 'PROCEDURE'
               END
          BULK COLLECT INTO l_types
          FROM all_arguments
         WHERE     owner = owner_in
               AND package_name = package_in
               AND object_name = program_in
      GROUP BY overload;

      IF l_types.COUNT > 0
      THEN
         retval := list_to_string (l_types, ',', distinct_in => TRUE);
      END IF;
   END IF;

   RETURN retval;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      -- Check for stand-alone program failed.
      RETURN NULL;
END program_type;
/